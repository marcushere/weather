/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.marcus.weather.gui;

/**
 *
 * @author Marcus
 */
public class WeatherGUI extends javax.swing.JFrame {

    /**
     * Creates new form WeatherGUI
     */
    public WeatherGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        runButton = new javax.swing.JButton();
        tOutputLabel = new javax.swing.JLabel();
        threadOutputScroll = new javax.swing.JScrollPane();
        threadOutputPanel = new javax.swing.JPanel();
        t1Label = new javax.swing.JLabel();
        t1Scroll = new javax.swing.JScrollPane();
        t1List = new javax.swing.JList();
        t2Label = new javax.swing.JLabel();
        t2Scroll = new javax.swing.JScrollPane();
        t2List = new javax.swing.JList();
        t3Label = new javax.swing.JLabel();
        t3Scroll = new javax.swing.JScrollPane();
        t3List = new javax.swing.JList();
        t4Label = new javax.swing.JLabel();
        t4Scroll = new javax.swing.JScrollPane();
        t4List = new javax.swing.JList();
        t5Label = new javax.swing.JLabel();
        t5Scroll = new javax.swing.JScrollPane();
        t5List = new javax.swing.JList();
        t6Label = new javax.swing.JLabel();
        t6Scroll = new javax.swing.JScrollPane();
        t6List = new javax.swing.JList();
        t7Label = new javax.swing.JLabel();
        t7Scroll = new javax.swing.JScrollPane();
        t7List = new javax.swing.JList();
        t8Label = new javax.swing.JLabel();
        t8Scroll = new javax.swing.JScrollPane();
        t8List = new javax.swing.JList();
        mainOutputLabel = new javax.swing.JLabel();
        mainScroll = new javax.swing.JScrollPane();
        mainList = new javax.swing.JList();
        optPanel = new javax.swing.JPanel();
        switchPanel = new javax.swing.JPanel();
        writeToDBSwitch = new javax.swing.JCheckBox();
        simRunSwitch = new javax.swing.JCheckBox();
        debugSwitch = new javax.swing.JCheckBox();
        threadSwitch = new javax.swing.JCheckBox();
        forceSwitch = new javax.swing.JCheckBox();
        ignoreSwitch = new javax.swing.JCheckBox();
        optionPanel = new javax.swing.JPanel();
        threadComboLabel = new javax.swing.JLabel();
        threadComboBox = new javax.swing.JComboBox();
        debugComboLabel = new javax.swing.JLabel();
        debugComboBox = new javax.swing.JComboBox();
        statusBarPanel = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        progLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WeatherRecorder");
        setResizable(false);

        runButton.setText("Run");
        runButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                runButtonMouseEntered(evt);
            }
        });
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        runButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                runButtonFocusGained(evt);
            }
        });

        tOutputLabel.setText("Thread output");

        threadOutputScroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                threadOutputScrollMouseEntered(evt);
            }
        });

        t1Label.setText("Thread 1");

        t1List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "sda", "asg", "hje", "wet", "nd", "xc", "rt", "jfgd", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t1Scroll.setViewportView(t1List);

        t2Label.setText("Thread 2");

        t2List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t2Scroll.setViewportView(t2List);

        t3Label.setText("Thread 3");

        t3List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t3Scroll.setViewportView(t3List);

        t4Label.setText("Thread 4");

        t4List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t4Scroll.setViewportView(t4List);

        t5Label.setText("Thread 5");

        t5List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t5Scroll.setViewportView(t5List);

        t6Label.setText("Thread 6");

        t6List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t6Scroll.setViewportView(t6List);

        t7Label.setText("Thread 7");

        t7List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t7Scroll.setViewportView(t7List);

        t8Label.setText("Thread 8");

        t8List.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t8Scroll.setViewportView(t8List);

        javax.swing.GroupLayout threadOutputPanelLayout = new javax.swing.GroupLayout(threadOutputPanel);
        threadOutputPanel.setLayout(threadOutputPanelLayout);
        threadOutputPanelLayout.setHorizontalGroup(
            threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(threadOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t1Label)
                    .addComponent(t1Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t2Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t3Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t4Label)
                    .addComponent(t4Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t5Label)
                    .addComponent(t5Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t6Label)
                    .addComponent(t6Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t7Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t7Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t8Label)
                    .addComponent(t8Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        threadOutputPanelLayout.setVerticalGroup(
            threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(threadOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t7Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(threadOutputPanelLayout.createSequentialGroup()
                        .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t6Label)
                            .addComponent(t7Label)
                            .addComponent(t8Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t6Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(threadOutputPanelLayout.createSequentialGroup()
                        .addComponent(t5Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t5Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(threadOutputPanelLayout.createSequentialGroup()
                        .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t1Label)
                            .addComponent(t2Label)
                            .addComponent(t3Label)
                            .addComponent(t4Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(threadOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t1Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t2Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t3Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t4Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(t8Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        threadOutputScroll.setViewportView(threadOutputPanel);

        mainOutputLabel.setText("Main output");

        mainList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        mainList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainListMouseEntered(evt);
            }
        });
        mainScroll.setViewportView(mainList);

        optPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        optPanel.setFocusable(false);

        writeToDBSwitch.setText("Write to database");
        writeToDBSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                writeToDBSwitchMouseEntered(evt);
            }
        });
        writeToDBSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                writeToDBSwitchFocusGained(evt);
            }
        });

        simRunSwitch.setText("Simulate run");
        simRunSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                simRunSwitchMouseEntered(evt);
            }
        });
        simRunSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                simRunSwitchFocusGained(evt);
            }
        });

        debugSwitch.setText("Debug");
        debugSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                debugSwitchMouseEntered(evt);
            }
        });
        debugSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugSwitchActionPerformed(evt);
            }
        });
        debugSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                debugSwitchFocusGained(evt);
            }
        });

        threadSwitch.setText("Multithread");
        threadSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                threadSwitchMouseEntered(evt);
            }
        });
        threadSwitch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                threadSwitchStateChanged(evt);
            }
        });
        threadSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                threadSwitchFocusGained(evt);
            }
        });

        forceSwitch.setText("Force run");
        forceSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                forceSwitchMouseEntered(evt);
            }
        });
        forceSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceSwitchActionPerformed(evt);
            }
        });
        forceSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                forceSwitchFocusGained(evt);
            }
        });

        ignoreSwitch.setText("Ignore run restrictions");
        ignoreSwitch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ignoreSwitchMouseEntered(evt);
            }
        });
        ignoreSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ignoreSwitchActionPerformed(evt);
            }
        });
        ignoreSwitch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ignoreSwitchFocusGained(evt);
            }
        });

        javax.swing.GroupLayout switchPanelLayout = new javax.swing.GroupLayout(switchPanel);
        switchPanel.setLayout(switchPanelLayout);
        switchPanelLayout.setHorizontalGroup(
            switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(switchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(switchPanelLayout.createSequentialGroup()
                        .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(debugSwitch)
                            .addComponent(simRunSwitch))
                        .addGap(12, 12, 12)
                        .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(forceSwitch)
                            .addComponent(writeToDBSwitch)))
                    .addGroup(switchPanelLayout.createSequentialGroup()
                        .addComponent(threadSwitch)
                        .addGap(18, 18, 18)
                        .addComponent(ignoreSwitch)))
                .addGap(27, 27, 27))
        );
        switchPanelLayout.setVerticalGroup(
            switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(switchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threadSwitch)
                    .addComponent(ignoreSwitch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forceSwitch)
                    .addComponent(debugSwitch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(switchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(writeToDBSwitch)
                    .addComponent(simRunSwitch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        threadComboLabel.setText("Number of threads");

        threadComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8" }));
        threadComboBox.setEnabled(false);
        threadComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                threadComboBoxMouseEntered(evt);
            }
        });
        threadComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                threadComboBoxFocusGained(evt);
            }
        });

        debugComboLabel.setText("Debug level");

        debugComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "(0) None", "(1) Error", "(2) Warning", "(3) Message", "(4) Progress", "(5) All" }));
        debugComboBox.setEnabled(false);
        debugComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                debugComboBoxMouseEntered(evt);
            }
        });
        debugComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                debugComboBoxFocusGained(evt);
            }
        });

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionPanelLayout.createSequentialGroup()
                        .addComponent(threadComboLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(threadComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(optionPanelLayout.createSequentialGroup()
                        .addComponent(debugComboLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(debugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threadComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threadComboLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(debugComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(debugComboLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout optPanelLayout = new javax.swing.GroupLayout(optPanel);
        optPanel.setLayout(optPanelLayout);
        optPanelLayout.setHorizontalGroup(
            optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(switchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optPanelLayout.setVerticalGroup(
            optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optPanelLayout.createSequentialGroup()
                .addGroup(optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(switchPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        statusBarPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        statusBarLabel.setText("Status bar");

        progLabel.setText("progText");

        javax.swing.GroupLayout statusBarPanelLayout = new javax.swing.GroupLayout(statusBarPanel);
        statusBarPanel.setLayout(statusBarPanelLayout);
        statusBarPanelLayout.setHorizontalGroup(
            statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarPanelLayout.createSequentialGroup()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progLabel))
        );
        statusBarPanelLayout.setVerticalGroup(
            statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(statusBarLabel)
                .addComponent(progLabel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(runButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainScroll)
                    .addComponent(mainOutputLabel)
                    .addComponent(tOutputLabel)
                    .addComponent(optPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(threadOutputScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tOutputLabel)
                .addGap(5, 5, 5)
                .addComponent(threadOutputScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainOutputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
    }//GEN-LAST:event_runButtonActionPerformed

    private void runButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_runButtonFocusGained
        statusBarLabel.setText("Click to run");
    }//GEN-LAST:event_runButtonFocusGained

    private void threadSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_threadSwitchFocusGained
        statusBarLabel.setText("Enable multithreading");
    }//GEN-LAST:event_threadSwitchFocusGained

    private void threadSwitchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_threadSwitchStateChanged
        if (threadSwitch.isSelected()) {
            threadComboBox.setEnabled(true);
        } else {
            threadComboBox.setEnabled(false);
        }
    }//GEN-LAST:event_threadSwitchStateChanged

    private void debugSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugSwitchActionPerformed
        if (debugSwitch.isSelected()) {
            debugComboBox.setEnabled(true);
        } else {
            debugComboBox.setEnabled(false);
        }
    }//GEN-LAST:event_debugSwitchActionPerformed

    private void debugSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_debugSwitchFocusGained
        statusBarLabel.setText("Turns on debug messages");
    }//GEN-LAST:event_debugSwitchFocusGained

    private void debugSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debugSwitchMouseEntered
        statusBarLabel.setText("Turns on debug messages");
    }//GEN-LAST:event_debugSwitchMouseEntered

    private void threadSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threadSwitchMouseEntered
        statusBarLabel.setText("Enable multithreading");
    }//GEN-LAST:event_threadSwitchMouseEntered

    private void threadComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_threadComboBoxFocusGained
        statusBarLabel.setText("Set number of threads");
    }//GEN-LAST:event_threadComboBoxFocusGained

    private void threadComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threadComboBoxMouseEntered
        statusBarLabel.setText("Set number of threads");
    }//GEN-LAST:event_threadComboBoxMouseEntered

    private void debugComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_debugComboBoxFocusGained
        statusBarLabel.setText("Set debug level");
    }//GEN-LAST:event_debugComboBoxFocusGained

    private void debugComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debugComboBoxMouseEntered
        statusBarLabel.setText("Set debug level");
    }//GEN-LAST:event_debugComboBoxMouseEntered

    private void runButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runButtonMouseEntered
        statusBarLabel.setText("Click to run");
    }//GEN-LAST:event_runButtonMouseEntered

    private void ignoreSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ignoreSwitchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ignoreSwitchActionPerformed

    private void simRunSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_simRunSwitchFocusGained
        statusBarLabel.setText("Run as determined by other switches, but write to alternate tables");
    }//GEN-LAST:event_simRunSwitchFocusGained

    private void simRunSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simRunSwitchMouseEntered
        statusBarLabel.setText("Run as determined by other switches, but write to alternate tables");
    }//GEN-LAST:event_simRunSwitchMouseEntered

    private void ignoreSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ignoreSwitchFocusGained
        statusBarLabel.setText("Ignore run conditions (to deal with corrupted logfile)");
    }//GEN-LAST:event_ignoreSwitchFocusGained

    private void ignoreSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ignoreSwitchMouseEntered
        statusBarLabel.setText("Ignore run conditions (to deal with corrupted logfile)");
    }//GEN-LAST:event_ignoreSwitchMouseEntered

    private void forceSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_forceSwitchFocusGained
        statusBarLabel.setText("Force run with all of the zips");
    }//GEN-LAST:event_forceSwitchFocusGained

    private void forceSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forceSwitchMouseEntered
        statusBarLabel.setText("Force run with all of the zips");
    }//GEN-LAST:event_forceSwitchMouseEntered

    private void writeToDBSwitchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_writeToDBSwitchFocusGained
        statusBarLabel.setText("Output to database as determined by other switches");
    }//GEN-LAST:event_writeToDBSwitchFocusGained

    private void writeToDBSwitchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_writeToDBSwitchMouseEntered
        statusBarLabel.setText("Output to database as determined by other switches");
    }//GEN-LAST:event_writeToDBSwitchMouseEntered

    private void threadOutputScrollMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_threadOutputScrollMouseEntered
        statusBarLabel.setText("Output from threads");
    }//GEN-LAST:event_threadOutputScrollMouseEntered

    private void mainListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainListMouseEntered
        statusBarLabel.setText("Output from main program");
    }//GEN-LAST:event_mainListMouseEntered

    private void runButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runButtonMouseClicked
        if (runButton.getText().equals("Run")) {
            threadSwitch.setEnabled(false);
            debugSwitch.setEnabled(false);
            simRunSwitch.setEnabled(false);
            ignoreSwitch.setEnabled(false);
            forceSwitch.setEnabled(false);
            writeToDBSwitch.setEnabled(false);
            threadComboBox.setEnabled(false);
            debugComboBox.setEnabled(false);
            runButton.setText("Interrupt");
        } else if (runButton.getText().equals("Interrupt")) {
            runButton.setText("Press button again to interrupt");
        } else if (runButton.getText().equals("Press button again to interrupt")) {
            runButton.setText("Forcing quit...");
        }
    }//GEN-LAST:event_runButtonMouseClicked

    private void forceSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceSwitchActionPerformed
        if (forceSwitch.isSelected()) {
            ignoreSwitch.setSelected(true);
            ignoreSwitch.setEnabled(false);
        } else {
            ignoreSwitch.setEnabled(true);
        }
    }//GEN-LAST:event_forceSwitchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
//                    break;
//                }
//            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WeatherGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox debugComboBox;
    private javax.swing.JLabel debugComboLabel;
    private javax.swing.JCheckBox debugSwitch;
    private javax.swing.JCheckBox forceSwitch;
    private javax.swing.JCheckBox ignoreSwitch;
    private javax.swing.JList mainList;
    private javax.swing.JLabel mainOutputLabel;
    private javax.swing.JScrollPane mainScroll;
    private javax.swing.JPanel optPanel;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JLabel progLabel;
    private javax.swing.JButton runButton;
    private javax.swing.JCheckBox simRunSwitch;
    private javax.swing.JLabel statusBarLabel;
    private javax.swing.JPanel statusBarPanel;
    private javax.swing.JPanel switchPanel;
    private javax.swing.JLabel t1Label;
    private javax.swing.JList t1List;
    private javax.swing.JScrollPane t1Scroll;
    private javax.swing.JLabel t2Label;
    private javax.swing.JList t2List;
    private javax.swing.JScrollPane t2Scroll;
    private javax.swing.JLabel t3Label;
    private javax.swing.JList t3List;
    private javax.swing.JScrollPane t3Scroll;
    private javax.swing.JLabel t4Label;
    private javax.swing.JList t4List;
    private javax.swing.JScrollPane t4Scroll;
    private javax.swing.JLabel t5Label;
    private javax.swing.JList t5List;
    private javax.swing.JScrollPane t5Scroll;
    private javax.swing.JLabel t6Label;
    private javax.swing.JList t6List;
    private javax.swing.JScrollPane t6Scroll;
    private javax.swing.JLabel t7Label;
    private javax.swing.JList t7List;
    private javax.swing.JScrollPane t7Scroll;
    private javax.swing.JLabel t8Label;
    private javax.swing.JList t8List;
    private javax.swing.JScrollPane t8Scroll;
    private javax.swing.JLabel tOutputLabel;
    private javax.swing.JComboBox threadComboBox;
    private javax.swing.JLabel threadComboLabel;
    private javax.swing.JPanel threadOutputPanel;
    private javax.swing.JScrollPane threadOutputScroll;
    private javax.swing.JCheckBox threadSwitch;
    private javax.swing.JCheckBox writeToDBSwitch;
    // End of variables declaration//GEN-END:variables
}
